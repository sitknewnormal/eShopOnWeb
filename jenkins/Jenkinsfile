pipeline {
    agent none
    stages {
        // stage('Checkout') {
        //     agent { 
        //         docker { image 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'} 
        //     }
        //     steps {
        //         checkout([$class: 'GitSCM', branches: [
        //         [name: '*/master']
        //         ],
        //         userRemoteConfigs: [
        //         [url: 'https://github.com/sitknewnormal/eShopOnWeb.git']
        //         ]
        //         ])
        //     }
        // }
        // stage('Restore') {
        //     agent { 
        //         docker { image 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'} 
        //     }
        //     steps {
        //         sh "dotnet restore --packages ./.nuget/packages eShopOnWeb.sln"
        //     }
        // }
        // stage('Clean') {
        //     agent { 
        //         docker { image 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'} 
        //     }
        //     steps {
        //         sh "dotnet clean eShopOnWeb.sln"
        //     }
        // }
        // stage('Build') {
        //     agent { 
        //         docker { image 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'} 
        //     }
        //     steps {
        //         sh "dotnet build eShopOnWeb.sln --no-restore --configuration Release"
        //     }
        // }
        // stage('Functional, integration and unit tests (xUnit)') {
        //     agent { 
        //         docker { image 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'} 
        //     }
        //     steps {
        //         sh "dotnet test ./tests/FunctionalTests/FunctionalTests.csproj --configuration Release --logger xunit --no-build --no-restore --results-directory ./allure-results/FunctionalTests"
        //         sh "dotnet test ./tests/IntegrationTests/IntegrationTests.csproj --configuration Release --logger xunit --no-build --no-restore --results-directory ./allure-results/IntegrationTests"
        //         sh "dotnet test ./tests/UnitTests/UnitTests.csproj --configuration Release --logger xunit --no-build --no-restore --results-directory ./allure-results/UnitTests"
        //     }
        // }
        stage('End 2 end eShopOnWeb tests with TestCafe') {
            agent { 
                docker { 
                    image 'testcafe/testcafe'
                    args '-v /var/jenkins_home/workspace/eShopOnWeb:/tests'
                    args '--entrypoint=\'\''
                } 
            }
            steps {
                sh "testcafe /tests/e2eTests/*_test.js -r spec,xunit:/tests/allure-results/e2eTests/TestResults.xml" 
            }
            // agent any
            // steps {
            //     sh "docker run -u 0:0 --rm -v c:/sitk/jenkins/jenkins_home2/workspace/eShopOnWeb:/tests testcafe/testcafe chromium /tests/tests/e2eTests/*_test.js -r spec,xunit:/tests/allure-results/e2eTests/TestResults.xml"
            // }
        }
        stage('Publish Reports') {
            agent { 
                docker { image 'openjdk'} 
            }
            steps{
                script {
                    allure ([
                        includeProperties: false, 
                        jdk: '', 
                        results: [[path: 'allure-results/FunctionalTests'],[path: 'allure-results/IntegrationTests'],[path: 'allure-results/UnitTests'],[path: 'allure-results/e2eTests']]
                    ])
                }            
            }
        }
    }
}