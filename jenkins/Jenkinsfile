pipeline {
    agent { 
        docker { image 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'} 
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [
                [name: '*/master']
                ],
                userRemoteConfigs: [
                [url: 'https://github.com/sitknewnormal/eShopOnWeb.git']
                ]
                ])
            }
        }
        stage('Restore') {
            steps {
                sh "dotnet restore --packages ./.nuget/packages eShopOnWeb.sln"
            }
        }
        stage('Clean') {
            steps {
                sh "dotnet clean eShopOnWeb.sln"
            }
        }
        stage('Build') {
            steps {
                sh "dotnet build eShopOnWeb.sln --no-restore --configuration Release"
            }
        }
        stage('Functional, integration and unit tests (xUnit)') {
            steps {
                sh "dotnet test ./tests/FunctionalTests/FunctionalTests.csproj --configuration Release --logger xunit --no-build --no-restore --results-directory ./allure-report/FunctionalTests"
                sh "dotnet test ./tests/IntegrationTests/IntegrationTests.csproj --configuration Release --logger xunit --no-build --no-restore --results-directory ./allure-report/IntegrationTests"
                sh "dotnet test ./tests/UnitTests/UnitTests.csproj --configuration Release --logger xunit --no-build --no-restore --results-directory ./allure-report/UnitTests"
            }
        }
    }
    agent { 
        docker { image 'openjdk'} 
    }
    stages {
        stage('Publish Reports') {
            steps{
                script {
                    allure ([
                        includeProperties: false, 
                        jdk: '', 
                        results: [[path: 'allure-report']]
                    ])
                }            
            }
        }
    }
}